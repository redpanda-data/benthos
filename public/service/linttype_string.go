// Code generated by "stringer -type=LintType"; DO NOT EDIT.

package service

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[LintCustom-0]
	_ = x[LintFailedRead-1]
	_ = x[LintMissingEnvVar-2]
	_ = x[LintInvalidOption-3]
	_ = x[LintBadLabel-4]
	_ = x[LintMissingLabel-5]
	_ = x[LintDuplicateLabel-6]
	_ = x[LintBadBloblang-7]
	_ = x[LintShouldOmit-8]
	_ = x[LintComponentMissing-9]
	_ = x[LintComponentNotFound-10]
	_ = x[LintUnknown-11]
	_ = x[LintMissing-12]
	_ = x[LintExpectedArray-13]
	_ = x[LintExpectedObject-14]
	_ = x[LintExpectedScalar-15]
	_ = x[LintDeprecated-16]
}

const _LintType_name = "LintCustomLintFailedReadLintMissingEnvVarLintInvalidOptionLintBadLabelLintMissingLabelLintDuplicateLabelLintBadBloblangLintShouldOmitLintComponentMissingLintComponentNotFoundLintUnknownLintMissingLintExpectedArrayLintExpectedObjectLintExpectedScalarLintDeprecated"

var _LintType_index = [...]uint16{0, 10, 24, 41, 58, 70, 86, 104, 119, 133, 153, 174, 185, 196, 213, 231, 249, 263}

func (i LintType) String() string {
	if i < 0 || i >= LintType(len(_LintType_index)-1) {
		return "LintType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _LintType_name[_LintType_index[i]:_LintType_index[i+1]]
}
